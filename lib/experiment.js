// Generated by CoffeeScript 1.9.1
(function() {
  var Experiment;

  Experiment = (function() {
    Experiment.store = null;

    function Experiment(name1, store) {
      this.name = name1;
      this.store = store;
      this._variants = [];
      this.seedFunction = function() {
        return Math.random();
      };
    }

    Experiment.prototype.variant = function(name, pct, value) {
      var ref;
      if (value == null) {
        ref = [pct, 100], value = ref[0], pct = ref[1];
      }
      this._variants.push({
        name: name,
        pct: pct,
        value: value
      });
      return this;
    };

    Experiment.prototype.run = function() {
      var chosen, i, j, k, len, len1, rand, ref, ref1, ref2, ref3, variant, variantName, variantsSum;
      if ((variantName = (ref = this.store) != null ? ref.get(this.name) : void 0) != null) {
        chosen = this._variants.filter(function(v) {
          return v.name === variantName;
        })[0];
      }
      if (chosen == null) {
        variantsSum = 0;
        ref1 = this._variants;
        for (j = 0, len = ref1.length; j < len; j++) {
          variant = ref1[j];
          variantsSum += variant.pct;
        }
        if (variantsSum !== 100) {
          throw new Error("experiment " + this.name + " has invalid percentages");
        }
        i = 0;
        rand = this.seedFunction() * (100 - 1) + 1;
        ref2 = this._variants;
        for (k = 0, len1 = ref2.length; k < len1; k++) {
          variant = ref2[k];
          i += variant.pct;
          if (i >= rand) {
            chosen = variant;
            break;
          }
        }
      }
      if (typeof chosen.value === "function") {
        chosen.value();
      }
      if ((ref3 = this.store) != null) {
        ref3.addResult(this.name, chosen.name);
      }
      return this.chosen = chosen;
    };

    return Experiment;

  })();

  module.exports = Experiment;

}).call(this);
